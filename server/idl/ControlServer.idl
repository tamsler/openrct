// $Id: ControlServer.idl,v 1.4 2003/05/08 20:14:53 thomas Exp $

/*
 *
 *   OpenRCT - Open Remote Collaboration Tool
 *
 *   Copyright (c) 2000 by Thomas Amsler
 * 
 *   This file is part of OpenRCT.
 *
 *   OpenRCT is free software; you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation; either version 2 of the License, or
 *   (at your option) any later version.
 *
 *   OpenRCT is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with OpenRCT; if not, write to the Free Software
 *   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 */

#ifndef __CONTROLSERVER_IDL__
#define __CONTROLSERVER_IDL__

#include "Server.idl"

/*
 * This module deals with the coordination of creating
 * context in rct modules and access control.
 */

module RCT {

    interface ControlServer : Server {

	/*
	 * Exception: Queue is empty
	 */
	exception QueueIsEmpty { 
	    string error_msg;
	};
 
	/*
	 * User wants to create context
	 */
	void request(in string class_name,
		     in string assembly_name,
		     in string user_alias,
		     in string user_id,
		     in string module_name,
		     in long type);

	/*
	 * User is done creating context
	 */
	void release(in string class_name,
		     in string assembly_name,
		     in string user_alias,
		     in string user_id,
		     in string module_name,
		     in long type);

	/*
	 * Manager can take access control at any time
	 */
	void take(in string class_name,
		  in string assembly_name,
		  in string user_alias,
		  in string user_id,
		  in string module_name,
		  in long type) raises(QueueIsEmpty);

	/*
	 * User can cancel request
	 */
	void cancel_request(in string class_name,
			    in string assembly_name,
			    in string user_alias,
			    in string user_id,
			    in string module_name,
			    in long type);


	/*
	 * User exits the module
	 */
	void exit_request(in string class_name,
			  in string assembly_name,
			  in string user_alias,
			  in string user_id,
			  in string module_name,
			  in long type);
    };
};

#endif
